version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1

    steps:
      - checkout

      - restore_cache:
          key: v1-deps-{{ checksum "dev-requirements.txt" }}-{{ checksum "setup.py" }}

      - run:
          name: Create Virtual Env
          command: |
            python3 -m venv venv

      - run:
          name: Install dev requirements
          command: |
            . venv/bin/activate
            pip install -r dev-requirements.txt

      - run:
          name: Install Phial
          command: |
            . venv/bin/activate
            pip install -e .

      - save_cache:
          key: v1-deps-{{ checksum "dev-requirements.txt" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"

      - run:
          name: Lint Code
          command: |
            . venv/bin/activate
            flake8 phial/ tests/

      - run:
          name: Static type check
          command: |
            . venv/bin/activate
            mypy phial --strict-optional --disallow-untyped-defs --disallow-incomplete-defs --disallow-untyped-decorators --no-implicit-optional --disallow-subclassing-any

      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
             pytest tests --cov=phial --cov-report xml

      - run:
          name: Upload coverage
          command: |
            . venv/bin/activate
            if [ -z $COVERALLS_REPO_TOKEN ]; then echo "No Coveralls Token"; else coveralls; fi

  deploy:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout

      - restore_cache:
          key: v1-deps-{{ checksum "dev-requirements.txt" }}-{{ checksum "setup.py" }}

      - run:
          name: Create Virtual Env
          command: |
            python3 -m venv venv

      - run:
          name: Install dev requirements
          command: |
            . venv/bin/activate
            pip install -r dev-requirements.txt

      - run:
          name: Install Phial
          command: |
            . venv/bin/activate
            pip install -e .

      - save_cache:
          key: v1-deps-{{ checksum "dev-requirements.txt" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"

      - run:
          name: Verify git tag vs. version
          command: |
            . venv/bin/activate
            python setup.py verify

      - run:
          name: Create .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username=sedders123" >> ~/.pypirc
            echo -e "password=$PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Create source distribution
          command: |
            python setup.py sdist

      - run:
          name: Create wheel
          command: |
            python setup.py bdist_wheel

      - run:
          name: Upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - build

          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
